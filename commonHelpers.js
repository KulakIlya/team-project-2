import{A as a,a as d}from"./assets/vendor-63dad5bd.js";(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const i of t.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&n(i)}).observe(document,{childList:!0,subtree:!0});function s(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function n(e){if(e.ep)return;e.ep=!0;const t=s(e);fetch(e.href,t)}})();a.init({once:!0,duration:1250});function u({containerClass:r,elementClass:o,triggerClass:s,panelClass:n}){const e=f(`.${r}`);return new d(e,{elementClass:o,triggerClass:s,panelClass:n})}function f(r){if(!document.querySelector(r))throw new Error(`Element with class ${r} was not found`);return r}document.addEventListener("DOMContentLoaded",function(){u({containerClass:"faq-list",elementClass:"faq-item",triggerClass:"faq-scroll-button",panelClass:"ac-panel"}),document.querySelectorAll(".faq-scroll-button").forEach(function(o){o.addEventListener("click",function(){const s=this.closest(".faq-item").querySelector(".ac-panel");s.style.display==="block"||s.style.display===""?(s.style.display="none",this.querySelector("#icon-arrow-up").classList.add("visually-hidden"),this.querySelector("#icon-arrow-down").classList.remove("visually-hidden")):(s.style.display="block",this.querySelector("#icon-arrow-down").classList.add("visually-hidden"),this.querySelector("#icon-arrow-up").classList.remove("visually-hidden"))})})});const p=document.querySelector(".projects-btn");p.addEventListener("click",()=>{window.open("https://github.com/KulakIlya/team-project-2")});const c=document.querySelector(".btn-scroll-to-top"),l=document.querySelector(".trigger-scroll-top-section");c.addEventListener("click",()=>{window.scrollTo({top:0,behavior:"smooth"})});const y={rootMargin:"0px",threshold:1},m=new IntersectionObserver(r=>{r.forEach(o=>{o.isIntersecting?c.classList.add("is-hidden"):c.classList.remove("is-hidden")})},y);l&&m.observe(l);
//# sourceMappingURL=commonHelpers.js.map
